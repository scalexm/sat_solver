/*
 *  detail/logical_scanner.lpp
 *  expr
 *
 *  Created by Alexandre Martin on 03/02/2016.
 *  Copyright Â© 2016 scalexm. All rights reserved.
 *
 */

%{
    #include "logical_driver.hpp"
    #include <string>

    static expr::detail::location loc;
%}

%option noyywrap nounput batch noinput nodefault

%{
    #define YY_USER_ACTION loc.columns(yyleng);
%}

%%

%{
    loc.step ();
%}

[ \t]+ loc.step();
[\n]+ loc.lines(yyleng); loc.step();
"(" return expr::detail::logical_parser::make_LPAREN(loc);
")" return expr::detail::logical_parser::make_RPAREN(loc);
"/\\" return expr::detail::logical_parser::make_AND(loc);
"\\/" return expr::detail::logical_parser::make_OR(loc);
"=>" return expr::detail::logical_parser::make_IMPL(loc);
"<=>" return expr::detail::logical_parser::make_EQ(loc);
"X" return expr::detail::logical_parser::make_XOR(loc);
"~" return expr::detail::logical_parser::make_NOT(loc);
[0-9]+ return expr::detail::logical_parser::make_VARIABLE(std::stoi(yytext), loc);
. driver.error(loc, "invalid character"); return expr::detail::logical_parser::make_ERROR(loc);
<<EOF>> return expr::detail::logical_parser::make_END(loc);
%%

namespace expr { namespace detail {
    void logical_driver::begin_scan(const std::string & str) {
        loc = location { };
        yy_scan_string(str.c_str());
    }
} }